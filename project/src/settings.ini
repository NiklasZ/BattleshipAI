# This is file that holds configurable parameters for the bots, particularly in the context of
# heuristics and optimisation hyper-parameters.

[AI]
# The path from the root directory that the program should use to look for bots to plugin.
bot plugin path: src.ai.bots

[Heuristics]
# Value boundaries an optimisation algorithm will explore with this heuristic.
ship adjacency value box: 0.05,5


[Training]
# Number of games to use to train
# (if your training frequency < games to train, it may not have enough games for the 1st training).
games to train: 10
# After how many games the AI should attempt to re-train bots (if they have trainable heuristics).
bot training frequency: 10
# By how much a bot must underperform vs. the previous performance to be re-trained on an attempt.
# This value is a percentage and should be from [0,1]. It is also relative to the previous performance.
# That means for example if the bot previously performed with a metric of 50 (and we want to maximise this metric),
# then the current bot is set to retrain if it does 0.1 (10%) worse, then it will re-train once this metric reaches 45.
force training if bot underperforms by: 0.05
# After how many games the AI will force a bot to be re-trained.
max games without training: 100


#This section contains hyper parameters for the optimistion algorithm which is run during training.
[Optimisation]
#Must be greater than the number of parameters (heuristics) to optimise.
black box global calls: 20
# Must be >1 to work.
black box local calls: 5
# For each game, a BFS looks for this number possible board states that could play out in the current configuration.
boards to sample per game: 100
# How many threads to have searching at once.
parallel calls: 4

[Logging]
# How many full games to store in a dict and pickle per opponent. (Used to avoid long loading times).
# This number needs to be greater than the games to train.
max games to log per opponent: 200

